{"version":3,"sources":["app/journalSlice.js","components/Journal.js","components/Moods.js","components/Menu.js","components/Title.js","components/Home.js","components/AllEntries.js","App.js","app/store.js","index.js"],"names":["journalSlice","createSlice","name","initialState","value","reducers","postEntry","state","action","payload","console","log","deleteEntry","selectText","journal","actions","Journal","useState","setText","dispatch","useSelector","useDispatch","post","event","preventDefault","entry","journalText","target","mood","date","Date","axios","then","data","postData","window","location","reload","Form","onSubmit","Row","Col","className","onChange","rows","aria-label","id","defaultValue","Moods","props","moods","moodList","setMoodList","moodTitle","setMoodTitle","key","useEffect","Axios","get","moodArr","newObj","i","j","length","elem","moodObj","push","map","md","Object","keys","toLowerCase","Badge","variant","values","Container","Menu","history","useHistory","Nav","defaultActiveKey","onClick","Title","Jumbotron","fluid","Home","AllEntries","entries","setEntries","Promise","resolve","reject","catch","err","Button","delete","error","App","exact","path","component","configureStore","reducer","journalReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.3097df99.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// the reducer functions for updating state\r\nexport const journalSlice = createSlice({\r\n  name: 'journal',\r\n  initialState: {\r\n    value: ''\r\n  },\r\n  reducers: {\r\n    postEntry: (state, action) => {\r\n      state.value = action.payload;\r\n      console.log(state)\r\n      console.log(action.payload)\r\n    },\r\n    deleteEntry: (state) => {\r\n      state.value = '';\r\n      console.log(state)\r\n    }\r\n  }\r\n});\r\n\r\nexport const postData = entry => dispatch => {\r\n  axios.post('api/journal', entry).then(data => {\r\n    console.log(data);\r\n  })\r\n}\r\n\r\nexport const readData = (entry) => dispatch => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get('api/journal/all').then((data) => {\r\n      console.log(data);\r\n      resolve(data);\r\n    }).catch((err) => {\r\n      reject(err)\r\n    })\r\n  })\r\n}\r\n\r\n// allows the useSelector(selectText) method to be used in order to get the state.\r\n// const text = useSelector(selectText)\r\n// then const text will be the state\r\n// Alternative is to define selector in the file they are used instead of this file \r\nexport const selectText = state => state.journal.value;\r\n\r\n// the available dispatches\r\n// delete is a reserved keyword\r\nexport const { postEntry, deleteEntry } = journalSlice.actions;\r\n\r\n// export this whole reducer\r\nexport default journalSlice.reducer;","import React, { useState } from 'react';\r\nimport { postEntry, deleteEntry, selectText, postData, readData } from '../app/journalSlice';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default function Journal() {\r\n  const [text, setText] = useState('');\r\n\r\n  let journalText = useSelector(selectText);\r\n  const dispatch = useDispatch();\r\n\r\n  const post = (event) => {\r\n    event.preventDefault();\r\n    let entry = {\r\n      journalText: event.target[0].value,\r\n      mood: event.target[1].value,\r\n      date: new Date()\r\n    };\r\n    dispatch(postData(entry));\r\n    window.location.reload();\r\n  }\r\n\r\n  return (<>\r\n    <Form onSubmit={(event) => post(event)}>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"input-group journal-entry\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Today's Journal Entry</span>\r\n            </div>\r\n            <textarea className='form-control ' onChange={(event) => setText(event.target.value)} rows='10' aria-label=\"With textarea\" />\r\n          </div>\r\n        </Col>\r\n\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\">How Am I Feeling?</label>\r\n            </div>\r\n            <select className=\"custom-select\" id=\"inputGroupSelect01\">\r\n              <option defaultValue>Happy</option>\r\n              <option>Sad</option>\r\n              <option>Angry</option>\r\n              <option>Surprised</option>\r\n              <option>Frustrated</option>\r\n              <option>Embarrassed</option>\r\n              <option>Grumpy</option>\r\n              <option>Excited</option>\r\n              <option>Anxious</option>\r\n              <option>Confused</option>\r\n            </select>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <button className='btn-primary btn'>\r\n            Save\r\n        </button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  </>)\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/esm/Container';\r\n\r\nexport default function Moods(props) {\r\n  const [moodList, setMoodList] = useState('')\r\n  const [moodTitle, setMoodTitle] = useState('')\r\n  let moods;\r\n  let key = -1;\r\n  useEffect(() => {\r\n    Axios.get('/api/moodtotals').then(data => {\r\n      let moodArr = [];\r\n      let newObj = {}\r\n      moods = data.data;\r\n      console.log(moods)\r\n      for (let i = 0, j = moods.length; i < j; i++) {\r\n        console.log(moods[i])\r\n        let elem = moods[i]['entries']['mood'];\r\n        console.log(elem)\r\n        if (!newObj[elem]) {\r\n          newObj[elem] = 1\r\n        } else {\r\n          newObj[elem]++;\r\n        }\r\n      }\r\n      console.log(newObj)\r\n\r\n      for (let elem in newObj) {\r\n        let moodObj = {};\r\n        console.log(elem)\r\n        moodObj[elem] = newObj[elem]\r\n        moodArr.push(moodObj);\r\n      }\r\n      console.log(moodArr)\r\n\r\n      setMoodList(moodArr.map((elem) => {\r\n        key++;\r\n          return (\r\n            <Col md={2}>\r\n              <p className='mood-btn' key={key++} id={`mood-${Object.keys(elem)[0].toLowerCase()}`}>\r\n                {Object.keys(elem)[0]}<Badge variant=\"light\">{Object.values(elem)[0]}</Badge>\r\n              </p>\r\n            </Col>\r\n          )\r\n\r\n      }))\r\n      setMoodTitle(<p id='mood-title'>My moods have been:</p>)\r\n    })\r\n  }, [])\r\n\r\n\r\n  return (<>\r\n  <Container>\r\n    <Row>\r\n      <Col>\r\n        {moodTitle}\r\n      </Col>\r\n    </Row>\r\n\r\n    <Row>\r\n        {moodList}\r\n      <Col></Col>\r\n    </Row>\r\n    </Container>\r\n  </>)\r\n}","import React, { useEffect } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { readData } from '../app/journalSlice';\r\nimport Moods from './Moods';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Menu() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const getLatestEntry = () => {\r\n  }\r\n\r\n  // goes to the journal/all route, thru the redux store\r\n  const getAllEntries = () => {\r\n    history.push('/all');\r\n  }\r\n\r\n  const makeNewEntries = () => {\r\n    history.push('/');\r\n  }\r\n  return (<>\r\n    <Nav defaultActiveKey=\"/home\" className=\"flex-column nav-menu\">\r\n      {/* <Nav.Link href=\"/latest\">View my latest entry</Nav.Link> */}\r\n      {/* <Nav.Link href='/allentries'>View all entries</Nav.Link> */}\r\n      <button onClick={makeNewEntries} className='menu-btn btn btn-success'>Make New Entries</button>\r\n      <button onClick={getAllEntries} className='menu-btn btn btn-success'>View all Entries</button>\r\n      {/* <Nav.Link href=\"/specificdate\">View entries on a specific date</Nav.Link> */}\r\n    </Nav>\r\n    {/* should have delete and update entries as well */}\r\n  </>)\r\n}","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nexport default function Title() {\r\n  return (\r\n    <Jumbotron id='jumbo-title' className='text-center' fluid>\r\n      <Container>\r\n        <h1>My Journal</h1>\r\n      </Container>\r\n    </Jumbotron>\r\n  )\r\n}","import React from 'react';\r\nimport Journal from './Journal';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Menu from './Menu';\r\nimport Title from './Title';\r\nimport Moods from './Moods';\r\n\r\nexport default function Home() {\r\n\r\n  return (\r\n    <>\r\n      <Title />\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md={2}>\r\n            <Menu />\r\n          </Col>\r\n\r\n          <Col>\r\n            <Row>\r\n              <Moods />\r\n\r\n            </Row>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <Journal />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { readData } from '../app/journalSlice';\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Title from './Title';\r\nimport Menu from './Menu';\r\n\r\nexport default function AllEntries() {\r\n  const [entries, setEntries] = useState('');\r\n\r\n  const deleteEntry = (date) => {\r\n    console.log(date);\r\n    axios.delete(`api/delete/${date}`).then(data => {\r\n      console.log(data);\r\n      window.location.reload();\r\n    })\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    try {\r\n      // upon load, get all journal entries. Then map entries to jsx.\r\n      let allEntries = dispatch(readData()).then((data) => {\r\n        setEntries(data.data.map((entry) => {\r\n          return (\r\n            <Container className='journal-container' key={entry['_id']}>\r\n              <Row>\r\n              <Col md={2}>\r\n                  <div className='mood-entry'>\r\n                    {entry.entries['mood']}\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div className='journal-entry'>\r\n                    {entry.entries['journalText']}\r\n                  </div>\r\n                </Col>\r\n              <Col md={1}>\r\n                <Button className='del-btn' id={entry['_id']} onClick={() => deleteEntry(entry['_id'])}>Delete</Button>\r\n              </Col>\r\n              </Row>\r\n            </Container>\r\n          )\r\n        }))\r\n      }).catch(err => {\r\n        console.error(err)\r\n      })\r\n    }\r\n    catch (err) {\r\n      console.error(err)\r\n    }\r\n    // accomplish the same thing in this local component, instead of with dispatch:\r\n    // axios.get('api/journal/all').then((data) => {\r\n    //   console.log(data)\r\n    // });\r\n  }, [])\r\n\r\n  return (<>\r\n    <Title />\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md={2}>\r\n          <Menu />\r\n        </Col>\r\n\r\n        <Col>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                {entries}\r\n\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </>)\r\n}","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport Home from './components/Home';\r\nimport Journal from \"./components/Journal\";\r\nimport Menu from './components/Menu';\r\nimport AllEntries from \"./components/AllEntries\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n      <Switch>\r\n\r\n        <Route exact path='/' component={() => {\r\n          return (<>\r\n            <Home />\r\n          </>)\r\n        }} />\r\n        <Route exact path='/all' component={AllEntries} />\r\n        </Switch>\r\n\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport journalReducer from './journalSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    journal: journalReducer\r\n  }\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}